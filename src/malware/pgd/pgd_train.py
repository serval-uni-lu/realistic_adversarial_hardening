import os
os.environ['PYTHONHASHSEED']=str(2)

import keras
import numpy as np
import pickle
import random as rn
from tensorflow.keras.utils import to_categorical
from keras.callbacks import EarlyStopping
import warnings
warnings.filterwarnings('ignore', category = FutureWarning)
from helpers import build_model,  get_nn_metrics
#sys.path.insert(0, os.path.abspath('..'))

rn.seed(2)
np.random.seed(2)


if __name__ == '__main__':

    # Load data
    x_train = np.load('..\data\\training\\scaled\\train_X_scaled.npy')
    y_train = np.load('..\data\\training\\train_y.npy')
    x_test = np.load('..\data\\training\\scaled\\test_X_scaled.npy')
    y_test = np.load('..\data\\training\\test_y.npy')
    y_train = to_categorical(y_train)

    ## Train model
    batch_size = 64
    es = EarlyStopping(monitor='val_loss',  mode = 'min', verbose=1)
    nn = build_model([128, 64],  lr_param = 0.001)
    nn.fit(x_train, y_train, verbose = 1, epochs = 5, batch_size = 64, callbacks=[es], shuffle = True, validation_split=0.1 )
    nn.save('pgd_malware_clean.h5')

    ## Get performance metrics
    get_nn_metrics(nn, x_test, y_test)
